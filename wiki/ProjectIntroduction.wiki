#labels Featured
= Introduction =

The Real-time Thread Operating System is an open source real-time operating system developed by the RT-Thread Studio based in China, after four years' fully concentrated development. It is aimed to change the current situation in China that there is no domestic owned Intellectual Patent in the small scale open source real-time operating system area. It is a real-time operating system not only on the open source level but also on the commercial standard level. Having been used by more than ten companies in China, it proved to be an operating system running stably for weeks.

It has been one year since our RT-Thread official version 0.2.4 has been released. The version 0.3.0 branch is currently under development. We have received lot of feedbacks from our customers, and have been fixing bugs as well as making big progress. 

= Features of RT-Thread Kernel =

  * Object oriented real-time core (while remaining the elegant and flexible style of C language);
  * 32 or 256 priority scheduling multi-thread scheduling; Using the round-robin policy ensures that all threads having the same priority level will be scheduled equally;
  * Synchronization of threads: semaphore and mutual exclusion (mutex) locks to prevent priority inversion;
  * Complete and efficient support for communication between threads, including mailbox, message queues, event;
  * Static memory management to support thread suspend/resume and thread-safe dynamic heap  management;
  * A device driver prototype to provide standard interface to high level application;

= Features of FinSH shell =
  * An accept C Programming Languge Expression command line;
  * Access system core functions directly via command line like C Programming Language;
  * Access system global variables directly via command line like C Programming Language;
  * Command history records and automatic complete for the Command Prompt;

= Features of Device File System = 
  * Virtual File System optimised for small device
  * POSIX style API;
  * Support the different implementation of file systems
  * Cache enabled EFSL FAT file system(GPLv2 coding) supported;
  * Buildin SDIO/SPI interface driver base on ST STM32 standard peripheral library, in which SDIO interface supports MMC cards and high speed SD cards.

= Features of LwIP, a lightweight TCP/IP protocol stack =
  * Standard BSD Socket interface;
  * IP, ICMP, UDP, TCP supported 
  * DNS, DHCP, PPP supported
  * TFTP、HTTP、FTP supported (refer to the netutil component)